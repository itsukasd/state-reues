# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestAddQuestion():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_addQuestion(self):
    self.driver.get("http://savsoftquiz/")
    self.driver.set_window_size(976, 703)
    self.driver.find_element(By.NAME, "username").send_keys("admin")
    self.driver.find_element(By.NAME, "password").send_keys("admin")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".panel-primary .panel-footer").click()
    self.driver.find_element(By.LINK_TEXT, "Dashboard").click()
    self.driver.find_element(By.CSS_SELECTOR, ".panel-green .panel-footer .fa").click()
    self.driver.find_element(By.LINK_TEXT, "Add new").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "html")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "html")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "html")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.switch_to.frame(0)
    self.driver.find_element(By.CSS_SELECTOR, "html").click()
    self.driver.switch_to.default_content()
    element = self.driver.find_element(By.CSS_SELECTOR, "html")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "html")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "html")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.switch_to.frame(0)
    element = self.driver.find_element(By.ID, "tinymce")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>test<br data-mce-bogus=\"1\"></p>'}", element)
    self.driver.switch_to.default_content()
    self.driver.find_element(By.ID, "radiobtn").click()
    self.driver.switch_to.frame(1)
    self.driver.find_element(By.CSS_SELECTOR, "html").click()
    element = self.driver.find_element(By.ID, "tinymce")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>test<br data-mce-bogus=\"1\"></p>'}", element)
    self.driver.switch_to.default_content()
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.LINK_TEXT, "Question Bank").click()
    self.driver.find_element(By.CSS_SELECTOR, ".dropdown-toggle > .fa-user").click()
    ##$##
    self.driver.find_element(By.LINK_TEXT, "Logout").click()
    self.driver.find_element(By.CSS_SELECTOR, "body").click()
    self.driver.close()
  
